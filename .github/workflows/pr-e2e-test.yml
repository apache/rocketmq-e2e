name: E2E test for pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["PR-CI"]
    types:
      - completed

env:
  DOCKER_REPO: apache/rocketmq-ci

jobs:
  deploy:
    if: ${{ success() }}
    name: Deploy RocketMQ
    needs: [list-version,docker]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    steps:
      - uses: apache/rocketmq-test-tool@1a646589accad17070423eabf0f54925e52b0666
        name: Deploy rocketmq
        with:
          action: "deploy"
          ask-config: "${{ secrets.ASK_CONFIG_VIRGINA }}"
          test-version: "${{ matrix.version }}"
          chart-git: "https://ghproxy.com/https://github.com/apache/rocketmq-docker.git"
          chart-branch: "master"
          chart-path: "./rocketmq-k8s-helm"
          job-id: ${{ strategy.job-index }}
          helm-values: |
            nameserver:
              image:
                repository: ${{env.DOCKER_REPO}}
                tag: ${{ matrix.version }}
            broker:
              image:
                repository: ${{env.DOCKER_REPO}}
                tag: ${{ matrix.version }}
            proxy:
              image:
                repository: ${{env.DOCKER_REPO}}
                tag: ${{ matrix.version }}

  e2e-test:
    if: ${{ success() }}
    name: E2E Test
    needs: [deploy]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    steps:
      - uses: apache/rocketmq-test-tool@1a646589accad17070423eabf0f54925e52b0666
        name: e2e test
        with:
          action: "test"
          ask-config: "${{ secrets.ASK_CONFIG_VIRGINA }}"
          test-version: "${{ matrix.version }}"
          test-code-git: "https://ghproxy.com/https://github.com/apache/rocketmq-e2e.git"
          test-code-branch: "master"
          test-code-path: java/e2e
          test-cmd: "mvn -B test"
          job-id: ${{ strategy.job-index }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/test_report/TEST-*.xml'
          annotate_only: true
          include_passed: true
          detailed_summary: true
      - uses: actions/upload-artifact@v3
        if: always()
        name: Upload test log
        with:
          name: testlog.txt
          path: testlog.txt


  clean:
    if: always()
    name: Clean
    needs: [list-version, e2e-test]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        version: ${{ fromJSON(needs.list-version.outputs.version-json) }}
    steps:
      - uses: apache/rocketmq-test-tool@1a646589accad17070423eabf0f54925e52b0666
        name: clean
        with:
          action: "clean"
          ask-config: "${{ secrets.ASK_CONFIG_VIRGINA }}"
          test-version: "${{ matrix.version }}"
          job-id: ${{ strategy.job-index }}
